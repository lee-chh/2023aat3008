/*

 Project #6 by Changhyun Lee
 
 "Fireworks"
 
 This is a fireworks display using Particles.
 
 Process : 
 
Three particle class definitions
- An ascending firecracker
- Exploding firecracker (version 1)
- Exploding Firecracker (version 2)
In the main function,
declare the dynamic arrays and output the background image.
When the mouse is pressed,
particle2 is created first.
When the y-velocity of particle2 reaches 0, 200 particles of both versions are generated by randomization.

 
 background image source : 
 <a href="https://kr.freepik.com/free-vector/a-cityscape-at-night_2987104.
 htm#query=%EC%95%BC%EA%B2%BD&position=0&from_view=keyword&track=sph">작가 brgfx</a> 
 출처 Freepik
 
 */

ArrayList<Particle> particles;
ArrayList<Particle3> particles3;
ArrayList<Particle2> particles2;
PImage back;

void setup() {
  size(714, 856);
  
  back = loadImage("night.jpg");
  back.resize(714, 856);
  
  particles = new ArrayList<Particle>();
  particles3 = new ArrayList<Particle3>();
  particles2 = new ArrayList<Particle2>();
}

void draw() {
  image(back, 0, 0);
  
  if (mousePressed) {
    float col1 = random(255);
    float col2 = random(255);
    float col3 = random(255);
    
    Particle2 t = new Particle2(random(50,width-50), height-100, col1, col2, col3);
    particles2.add(t);  // particles2에 추가
    
    
  }

  // particles2 업데이트
  for (int i = particles2.size() - 1; i >= 0; i--) {
    Particle2 t = particles2.get(i);
    t.update();
    t.display();
    
    // particles2가 일정 높이에 도달하면 폭발
    if (t.speedY >= 0) {
      particles2.remove(i); //우선 올라간 폭죽 제거
      
      color col = t.col;
      int x = int(random(100));
      //int x = 2;
      //int x = 1;
      if (x%2 == 1)
      {
        for (int k = 0; k < 200; k++) {
          Particle p = new Particle(t.x, t.y, col);
          particles.add(p);
        }
      } else{
        
        for (int k = 0; k < 200; k++) {
          Particle3 p = new Particle3(t.x, t.y, col);
          particles3.add(p);
        }
      }
      
    }
  }

  // 폭발한 폭죽 업데이트
  for (int j = particles.size() - 1; j >= 0; j--) {
    Particle p = particles.get(j);
    p.update();
    p.display();

    // particles가 화면을 벗어나면 제거
    if (p.y > height) {
      particles.remove(j);
    }
  }
  for (int j = particles3.size() - 1; j >= 0; j--) {
    Particle3 p = particles3.get(j);
    p.update();
    p.display();
    
    if (t.movement >= 100) {
      

    // particles가 화면을 벗어나면 제거
    if (p.y > height) {
      particles3.remove(j);
    }
  }
  
}
